mdp
const int NUMBER_OF_PLAYERS = 3;
const int GRID_SIZE = 3;
const double HIT_SUCCESS_RATE = 0.4;
formula IS_DONE = (done=true);
formula NOT_DONE = !IS_DONE;
formula PLAYER0_KO = (hp0=0);
formula NOT_PLAYER0_KO = !PLAYER0_KO;
formula PLAYER1_KO = (hp1=0);
formula NOT_PLAYER1_KO = !PLAYER1_KO;
formula PLAYER2_KO = (hp2=0);
formula NOT_PLAYER2_KO = !PLAYER2_KO;
formula ALL_PLAYERS_KO =PLAYER0_KO & PLAYER1_KO & PLAYER2_KO;
formula NOT_ALL_PLAYERS_KO = !ALL_PLAYERS_KO;
formula PLAYER0_COLLISION_PLAYER1 = (x0=x1 & y0=y1 & hp0!=0 & hp1!=0);
formula NOT_PLAYER0_COLLISION_PLAYER1 = !PLAYER0_COLLISION_PLAYER1;
formula PLAYER0_COLLISION_PLAYER2 = (x0=x2 & y0=y2 & hp0!=0 & hp2!=0);
formula NOT_PLAYER0_COLLISION_PLAYER2 = !PLAYER0_COLLISION_PLAYER2;
formula PLAYER1_COLLISION_PLAYER0 = (x1=x0 & y1=y0 & hp1!=0 & hp0!=0);
formula NOT_PLAYER1_COLLISION_PLAYER0 = !PLAYER1_COLLISION_PLAYER0;
formula PLAYER1_COLLISION_PLAYER2 = (x1=x2 & y1=y2 & hp1!=0 & hp2!=0);
formula NOT_PLAYER1_COLLISION_PLAYER2 = !PLAYER1_COLLISION_PLAYER2;
formula PLAYER2_COLLISION_PLAYER0 = (x2=x0 & y2=y0 & hp2!=0 & hp0!=0);
formula NOT_PLAYER2_COLLISION_PLAYER0 = !PLAYER2_COLLISION_PLAYER0;
formula PLAYER2_COLLISION_PLAYER1 = (x2=x1 & y2=y1 & hp2!=0 & hp1!=0);
formula NOT_PLAYER2_COLLISION_PLAYER1 = !PLAYER2_COLLISION_PLAYER1;
formula IS_COLLISION =PLAYER0_COLLISION_PLAYER1 | PLAYER0_COLLISION_PLAYER2 | PLAYER1_COLLISION_PLAYER0 | PLAYER1_COLLISION_PLAYER2 | PLAYER2_COLLISION_PLAYER0 | PLAYER2_COLLISION_PLAYER1;
formula NOT_COLLISION = !IS_COLLISION;
module simple_env
done : bool init false;
turn : [0..NUMBER_OF_PLAYERS] init 0;
x0: [0..GRID_SIZE] init 3;
y0: [0..GRID_SIZE] init 2;
hp0: [0..1] init 1;
x1: [0..GRID_SIZE] init 1;
y1: [0..GRID_SIZE] init 3;
hp1: [0..1] init 1;
x2: [0..GRID_SIZE] init 0;
y2: [0..GRID_SIZE] init 3;
hp2: [0..1] init 1;
target_x: [0..GRID_SIZE] init 1;
target_y: [0..GRID_SIZE] init 2;
[UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO -> (y0'=max(y0-1,0)) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[UP] turn=0 & NOT_COLLISION & PLAYER0_KO -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO -> (y1'=max(y1-1,0)) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[UP] turn=1 & NOT_COLLISION & PLAYER1_KO -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO -> (y2'=max(y2-1,0)) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[UP] turn=2 & NOT_COLLISION & PLAYER2_KO -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[UP] (IS_COLLISION | ALL_PLAYERS_KO) & NOT_DONE -> (done'=true);
[UP] (IS_COLLISION | ALL_PLAYERS_KO) & IS_DONE -> true;
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 0-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 1-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 2-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 3-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 0-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 0 & x1 = 0) ? 0 : hp1) & (hp2'= (y2 = 0 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 1-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 0 & x1 = 1) ? 0 : hp1) & (hp2'= (y2 = 0 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 2-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 0 & x1 = 2) ? 0 : hp1) & (hp2'= (y2 = 0 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 3-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 0 & x1 = 3) ? 0 : hp1) & (hp2'= (y2 = 0 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 0-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 1 & x1 = 0) ? 0 : hp1) & (hp2'= (y2 = 1 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 1-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 1 & x1 = 1) ? 0 : hp1) & (hp2'= (y2 = 1 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 2-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 1 & x1 = 2) ? 0 : hp1) & (hp2'= (y2 = 1 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 3-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 1 & x1 = 3) ? 0 : hp1) & (hp2'= (y2 = 1 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 0-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 2 & x1 = 0) ? 0 : hp1) & (hp2'= (y2 = 2 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 1-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 2 & x1 = 1) ? 0 : hp1) & (hp2'= (y2 = 2 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 2-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 2 & x1 = 2) ? 0 : hp1) & (hp2'= (y2 = 2 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 3-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 2 & x1 = 3) ? 0 : hp1) & (hp2'= (y2 = 2 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 0-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 1-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 2-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 3-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 0-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 0) ? 0 : hp0) & (hp2'= (y2 = 0 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 1-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 1) ? 0 : hp0) & (hp2'= (y2 = 0 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 2-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 2) ? 0 : hp0) & (hp2'= (y2 = 0 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 3-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 3) ? 0 : hp0) & (hp2'= (y2 = 0 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 0-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 0) ? 0 : hp0) & (hp2'= (y2 = 1 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 1-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 1) ? 0 : hp0) & (hp2'= (y2 = 1 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 2-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 2) ? 0 : hp0) & (hp2'= (y2 = 1 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 3-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 3) ? 0 : hp0) & (hp2'= (y2 = 1 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 0-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 0) ? 0 : hp0) & (hp2'= (y2 = 2 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 1-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 1) ? 0 : hp0) & (hp2'= (y2 = 2 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 2-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 2) ? 0 : hp0) & (hp2'= (y2 = 2 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 3-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 3) ? 0 : hp0) & (hp2'= (y2 = 2 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 0-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 1-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 2-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 3-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 0-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 0) ? 0 : hp0) & (hp1'= (y1 = 0 & x1 = 0) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 1-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 1) ? 0 : hp0) & (hp1'= (y1 = 0 & x1 = 1) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 2-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 2) ? 0 : hp0) & (hp1'= (y1 = 0 & x1 = 2) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 3-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 3) ? 0 : hp0) & (hp1'= (y1 = 0 & x1 = 3) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 0-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 0) ? 0 : hp0) & (hp1'= (y1 = 1 & x1 = 0) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 1-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 1) ? 0 : hp0) & (hp1'= (y1 = 1 & x1 = 1) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 2-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 2) ? 0 : hp0) & (hp1'= (y1 = 1 & x1 = 2) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 3-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 3) ? 0 : hp0) & (hp1'= (y1 = 1 & x1 = 3) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 0-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 0) ? 0 : hp0) & (hp1'= (y1 = 2 & x1 = 0) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 1-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 1) ? 0 : hp0) & (hp1'= (y1 = 2 & x1 = 1) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 2-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 2) ? 0 : hp0) & (hp1'= (y1 = 2 & x1 = 2) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 3-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 3) ? 0 : hp0) & (hp1'= (y1 = 2 & x1 = 3) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_UP] (IS_COLLISION | ALL_PLAYERS_KO) & NOT_DONE -> (done'=true);
[HIT_UP] (IS_COLLISION | ALL_PLAYERS_KO) & IS_DONE -> true;
[RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO -> (x0'=min(x0+1,GRID_SIZE)) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO -> (x1'=min(x1+1,GRID_SIZE)) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO -> (x2'=min(x2+1,GRID_SIZE)) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[RIGHT] (IS_COLLISION | ALL_PLAYERS_KO) & NOT_DONE -> (done'=true);
[RIGHT] (IS_COLLISION | ALL_PLAYERS_KO) & IS_DONE -> true;
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 0-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 0 & x1 = 1) ? 0 : hp1) & (hp2'= (y2 = 0 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 1-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 0 & x1 = 2) ? 0 : hp1) & (hp2'= (y2 = 0 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 2-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 0 & x1 = 3) ? 0 : hp1) & (hp2'= (y2 = 0 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 3-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 0 & x1 = 4) ? 0 : hp1) & (hp2'= (y2 = 0 & x2 = 4) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 0-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 1 & x1 = 1) ? 0 : hp1) & (hp2'= (y2 = 1 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 1-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 1 & x1 = 2) ? 0 : hp1) & (hp2'= (y2 = 1 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 2-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 1 & x1 = 3) ? 0 : hp1) & (hp2'= (y2 = 1 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 3-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 1 & x1 = 4) ? 0 : hp1) & (hp2'= (y2 = 1 & x2 = 4) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 0-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 2 & x1 = 1) ? 0 : hp1) & (hp2'= (y2 = 2 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 1-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 2 & x1 = 2) ? 0 : hp1) & (hp2'= (y2 = 2 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 2-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 2 & x1 = 3) ? 0 : hp1) & (hp2'= (y2 = 2 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 3-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 2 & x1 = 4) ? 0 : hp1) & (hp2'= (y2 = 2 & x2 = 4) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 0-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 3 & x1 = 1) ? 0 : hp1) & (hp2'= (y2 = 3 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 1-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 3 & x1 = 2) ? 0 : hp1) & (hp2'= (y2 = 3 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 2-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 3 & x1 = 3) ? 0 : hp1) & (hp2'= (y2 = 3 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 3-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 3 & x1 = 4) ? 0 : hp1) & (hp2'= (y2 = 3 & x2 = 4) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 0-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 1) ? 0 : hp0) & (hp2'= (y2 = 0 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 1-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 2) ? 0 : hp0) & (hp2'= (y2 = 0 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 2-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 3) ? 0 : hp0) & (hp2'= (y2 = 0 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 3-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 4) ? 0 : hp0) & (hp2'= (y2 = 0 & x2 = 4) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 0-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 1) ? 0 : hp0) & (hp2'= (y2 = 1 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 1-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 2) ? 0 : hp0) & (hp2'= (y2 = 1 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 2-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 3) ? 0 : hp0) & (hp2'= (y2 = 1 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 3-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 4) ? 0 : hp0) & (hp2'= (y2 = 1 & x2 = 4) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 0-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 1) ? 0 : hp0) & (hp2'= (y2 = 2 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 1-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 2) ? 0 : hp0) & (hp2'= (y2 = 2 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 2-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 3) ? 0 : hp0) & (hp2'= (y2 = 2 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 3-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 4) ? 0 : hp0) & (hp2'= (y2 = 2 & x2 = 4) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 0-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 1) ? 0 : hp0) & (hp2'= (y2 = 3 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 1-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 2) ? 0 : hp0) & (hp2'= (y2 = 3 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 2-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 3) ? 0 : hp0) & (hp2'= (y2 = 3 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 3-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 4) ? 0 : hp0) & (hp2'= (y2 = 3 & x2 = 4) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 0-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 1) ? 0 : hp0) & (hp1'= (y1 = 0 & x1 = 1) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 1-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 2) ? 0 : hp0) & (hp1'= (y1 = 0 & x1 = 2) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 2-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 3) ? 0 : hp0) & (hp1'= (y1 = 0 & x1 = 3) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 3-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 4) ? 0 : hp0) & (hp1'= (y1 = 0 & x1 = 4) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 0-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 1) ? 0 : hp0) & (hp1'= (y1 = 1 & x1 = 1) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 1-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 2) ? 0 : hp0) & (hp1'= (y1 = 1 & x1 = 2) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 2-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 3) ? 0 : hp0) & (hp1'= (y1 = 1 & x1 = 3) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 3-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 4) ? 0 : hp0) & (hp1'= (y1 = 1 & x1 = 4) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 0-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 1) ? 0 : hp0) & (hp1'= (y1 = 2 & x1 = 1) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 1-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 2) ? 0 : hp0) & (hp1'= (y1 = 2 & x1 = 2) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 2-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 3) ? 0 : hp0) & (hp1'= (y1 = 2 & x1 = 3) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 3-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 4) ? 0 : hp0) & (hp1'= (y1 = 2 & x1 = 4) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 0-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 1) ? 0 : hp0) & (hp1'= (y1 = 3 & x1 = 1) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 1-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 2) ? 0 : hp0) & (hp1'= (y1 = 3 & x1 = 2) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 2-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 3) ? 0 : hp0) & (hp1'= (y1 = 3 & x1 = 3) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 3-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 4) ? 0 : hp0) & (hp1'= (y1 = 3 & x1 = 4) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_RIGHT] (IS_COLLISION | ALL_PLAYERS_KO) & NOT_DONE -> (done'=true);
[HIT_RIGHT] (IS_COLLISION | ALL_PLAYERS_KO) & IS_DONE -> true;
[DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO -> (y0'=min(y0+1,GRID_SIZE)) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO -> (y1'=min(y1+1,GRID_SIZE)) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO -> (y2'=min(y2+1,GRID_SIZE)) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[DOWN] (IS_COLLISION | ALL_PLAYERS_KO) & NOT_DONE -> (done'=true);
[DOWN] (IS_COLLISION | ALL_PLAYERS_KO) & IS_DONE -> true;
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 0-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 1 & x1 = 0) ? 0 : hp1) & (hp2'= (y2 = 1 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 1-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 1 & x1 = 1) ? 0 : hp1) & (hp2'= (y2 = 1 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 2-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 1 & x1 = 2) ? 0 : hp1) & (hp2'= (y2 = 1 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 3-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 1 & x1 = 3) ? 0 : hp1) & (hp2'= (y2 = 1 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 0-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 2 & x1 = 0) ? 0 : hp1) & (hp2'= (y2 = 2 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 1-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 2 & x1 = 1) ? 0 : hp1) & (hp2'= (y2 = 2 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 2-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 2 & x1 = 2) ? 0 : hp1) & (hp2'= (y2 = 2 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 3-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 2 & x1 = 3) ? 0 : hp1) & (hp2'= (y2 = 2 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 0-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 3 & x1 = 0) ? 0 : hp1) & (hp2'= (y2 = 3 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 1-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 3 & x1 = 1) ? 0 : hp1) & (hp2'= (y2 = 3 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 2-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 3 & x1 = 2) ? 0 : hp1) & (hp2'= (y2 = 3 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 3-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 3 & x1 = 3) ? 0 : hp1) & (hp2'= (y2 = 3 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 0-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 4 & x1 = 0) ? 0 : hp1) & (hp2'= (y2 = 4 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 1-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 4 & x1 = 1) ? 0 : hp1) & (hp2'= (y2 = 4 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 2-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 4 & x1 = 2) ? 0 : hp1) & (hp2'= (y2 = 4 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 3-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 4 & x1 = 3) ? 0 : hp1) & (hp2'= (y2 = 4 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 0-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 0) ? 0 : hp0) & (hp2'= (y2 = 1 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 1-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 1) ? 0 : hp0) & (hp2'= (y2 = 1 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 2-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 2) ? 0 : hp0) & (hp2'= (y2 = 1 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 3-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 3) ? 0 : hp0) & (hp2'= (y2 = 1 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 0-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 0) ? 0 : hp0) & (hp2'= (y2 = 2 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 1-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 1) ? 0 : hp0) & (hp2'= (y2 = 2 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 2-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 2) ? 0 : hp0) & (hp2'= (y2 = 2 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 3-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 3) ? 0 : hp0) & (hp2'= (y2 = 2 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 0-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 0) ? 0 : hp0) & (hp2'= (y2 = 3 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 1-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 1) ? 0 : hp0) & (hp2'= (y2 = 3 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 2-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 2) ? 0 : hp0) & (hp2'= (y2 = 3 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 3-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 3) ? 0 : hp0) & (hp2'= (y2 = 3 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 0-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 4 & x0 = 0) ? 0 : hp0) & (hp2'= (y2 = 4 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 1-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 4 & x0 = 1) ? 0 : hp0) & (hp2'= (y2 = 4 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 2-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 4 & x0 = 2) ? 0 : hp0) & (hp2'= (y2 = 4 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 3-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 4 & x0 = 3) ? 0 : hp0) & (hp2'= (y2 = 4 & x2 = 3) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 0-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 0) ? 0 : hp0) & (hp1'= (y1 = 1 & x1 = 0) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 1-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 1) ? 0 : hp0) & (hp1'= (y1 = 1 & x1 = 1) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 2-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 2) ? 0 : hp0) & (hp1'= (y1 = 1 & x1 = 2) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 3-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 3) ? 0 : hp0) & (hp1'= (y1 = 1 & x1 = 3) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 0-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 0) ? 0 : hp0) & (hp1'= (y1 = 2 & x1 = 0) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 1-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 1) ? 0 : hp0) & (hp1'= (y1 = 2 & x1 = 1) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 2-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 2) ? 0 : hp0) & (hp1'= (y1 = 2 & x1 = 2) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 3-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 3) ? 0 : hp0) & (hp1'= (y1 = 2 & x1 = 3) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 0-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 0) ? 0 : hp0) & (hp1'= (y1 = 3 & x1 = 0) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 1-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 1) ? 0 : hp0) & (hp1'= (y1 = 3 & x1 = 1) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 2-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 2) ? 0 : hp0) & (hp1'= (y1 = 3 & x1 = 2) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 3-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 3) ? 0 : hp0) & (hp1'= (y1 = 3 & x1 = 3) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 0-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 4 & x0 = 0) ? 0 : hp0) & (hp1'= (y1 = 4 & x1 = 0) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 1-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 4 & x0 = 1) ? 0 : hp0) & (hp1'= (y1 = 4 & x1 = 1) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 2-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 4 & x0 = 2) ? 0 : hp0) & (hp1'= (y1 = 4 & x1 = 2) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 3-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 4 & x0 = 3) ? 0 : hp0) & (hp1'= (y1 = 4 & x1 = 3) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_DOWN] (IS_COLLISION | ALL_PLAYERS_KO) & NOT_DONE -> (done'=true);
[HIT_DOWN] (IS_COLLISION | ALL_PLAYERS_KO)& IS_DONE -> true;
[LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO -> (x0'=max(x0-1,0)) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO -> (x1'=max(x1-1,0)) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO -> (x2'=max(x2-1,0)) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[LEFT] (IS_COLLISION | ALL_PLAYERS_KO) & NOT_DONE -> (done'=true);
[LEFT] (IS_COLLISION | ALL_PLAYERS_KO) & IS_DONE -> true;
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 0-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 1-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 0 & x1 = 0) ? 0 : hp1) & (hp2'= (y2 = 0 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 2-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 0 & x1 = 1) ? 0 : hp1) & (hp2'= (y2 = 0 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 0 & x0 = 3-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 0 & x1 = 2) ? 0 : hp1) & (hp2'= (y2 = 0 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 0 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 0-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 1-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 1 & x1 = 0) ? 0 : hp1) & (hp2'= (y2 = 1 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 2-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 1 & x1 = 1) ? 0 : hp1) & (hp2'= (y2 = 1 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 1 & x0 = 3-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 1 & x1 = 2) ? 0 : hp1) & (hp2'= (y2 = 1 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 1 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 0-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 1-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 2 & x1 = 0) ? 0 : hp1) & (hp2'= (y2 = 2 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 2-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 2 & x1 = 1) ? 0 : hp1) & (hp2'= (y2 = 2 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 2 & x0 = 3-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 2 & x1 = 2) ? 0 : hp1) & (hp2'= (y2 = 2 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 2 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 0-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 1-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 3 & x1 = 0) ? 0 : hp1) & (hp2'= (y2 = 3 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 2-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 3 & x1 = 1) ? 0 : hp1) & (hp2'= (y2 = 3 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = 3 & x0 = 3-> (1-HIT_SUCCESS_RATE): (hp0'=hp0) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp1'= (y1 = 3 & x1 = 2) ? 0 : hp1) & (hp2'= (y2 = 3 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=0 & NOT_COLLISION & PLAYER0_KO & y0 = 3 & x0 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 0-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 1-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 0) ? 0 : hp0) & (hp2'= (y2 = 0 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 2-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 1) ? 0 : hp0) & (hp2'= (y2 = 0 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 0 & x1 = 3-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 2) ? 0 : hp0) & (hp2'= (y2 = 0 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 0 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 0-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 1-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 0) ? 0 : hp0) & (hp2'= (y2 = 1 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 2-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 1) ? 0 : hp0) & (hp2'= (y2 = 1 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 1 & x1 = 3-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 2) ? 0 : hp0) & (hp2'= (y2 = 1 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 1 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 0-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 1-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 0) ? 0 : hp0) & (hp2'= (y2 = 2 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 2-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 1) ? 0 : hp0) & (hp2'= (y2 = 2 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 2 & x1 = 3-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 2) ? 0 : hp0) & (hp2'= (y2 = 2 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 2 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 0-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 1-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 0) ? 0 : hp0) & (hp2'= (y2 = 3 & x2 = 0) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 2-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 1) ? 0 : hp0) & (hp2'= (y2 = 3 & x2 = 1) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = 3 & x1 = 3-> (1-HIT_SUCCESS_RATE): (hp1'=hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 2) ? 0 : hp0) & (hp2'= (y2 = 3 & x2 = 2) ? 0 : hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=1 & NOT_COLLISION & PLAYER1_KO & y1 = 3 & x1 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 0-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 1-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 0) ? 0 : hp0) & (hp1'= (y1 = 0 & x1 = 0) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 2-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 1) ? 0 : hp0) & (hp1'= (y1 = 0 & x1 = 1) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 0 & x2 = 3-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 0 & x0 = 2) ? 0 : hp0) & (hp1'= (y1 = 0 & x1 = 2) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 0 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 0-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 1-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 0) ? 0 : hp0) & (hp1'= (y1 = 1 & x1 = 0) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 2-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 1) ? 0 : hp0) & (hp1'= (y1 = 1 & x1 = 1) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 1 & x2 = 3-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 1 & x0 = 2) ? 0 : hp0) & (hp1'= (y1 = 1 & x1 = 2) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 1 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 0-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 1-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 0) ? 0 : hp0) & (hp1'= (y1 = 2 & x1 = 0) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 2-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 1) ? 0 : hp0) & (hp1'= (y1 = 2 & x1 = 1) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 2 & x2 = 3-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 2 & x0 = 2) ? 0 : hp0) & (hp1'= (y1 = 2 & x1 = 2) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 2 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 0-> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 0 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 1-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 0) ? 0 : hp0) & (hp1'= (y1 = 3 & x1 = 0) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 1 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 2-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 1) ? 0 : hp0) & (hp1'= (y1 = 3 & x1 = 1) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 2 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = 3 & x2 = 3-> (1-HIT_SUCCESS_RATE): (hp2'=hp2) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0) + HIT_SUCCESS_RATE: (hp0'= (y0 = 3 & x0 = 2) ? 0 : hp0) & (hp1'= (y1 = 3 & x1 = 2) ? 0 : hp1) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] turn=2 & NOT_COLLISION & PLAYER2_KO & y2 = 3 & x2 = 3 -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[HIT_LEFT] (IS_COLLISION | ALL_PLAYERS_KO) & NOT_DONE -> (done'=true);
[HIT_LEFT] (IS_COLLISION | ALL_PLAYERS_KO) & IS_DONE -> true;
[PICK_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = target_y & x0 = target_x -> 0.0625: (target_y'=0) & (target_x'=0) + 0.0625: (target_y'=0) & (target_x'=1) + 0.0625: (target_y'=0) & (target_x'=2) + 0.0625: (target_y'=0) & (target_x'=3) + 0.0625: (target_y'=1) & (target_x'=0) + 0.0625: (target_y'=1) & (target_x'=1) + 0.0625: (target_y'=1) & (target_x'=2) + 0.0625: (target_y'=1) & (target_x'=3) + 0.0625: (target_y'=2) & (target_x'=0) + 0.0625: (target_y'=2) & (target_x'=1) + 0.0625: (target_y'=2) & (target_x'=2) + 0.0625: (target_y'=2) & (target_x'=3) + 0.0625: (target_y'=3) & (target_x'=0) + 0.0625: (target_y'=3) & (target_x'=1) + 0.0625: (target_y'=3) & (target_x'=2) + 0.0625: (target_y'=3) & (target_x'=3) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[PICK_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & (y0 != target_y | x0 != target_x) -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[PICK_UP] turn=0 & NOT_COLLISION & PLAYER0_KO -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[PICK_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = target_y & x1 = target_x -> 0.0625: (target_y'=0) & (target_x'=0) + 0.0625: (target_y'=0) & (target_x'=1) + 0.0625: (target_y'=0) & (target_x'=2) + 0.0625: (target_y'=0) & (target_x'=3) + 0.0625: (target_y'=1) & (target_x'=0) + 0.0625: (target_y'=1) & (target_x'=1) + 0.0625: (target_y'=1) & (target_x'=2) + 0.0625: (target_y'=1) & (target_x'=3) + 0.0625: (target_y'=2) & (target_x'=0) + 0.0625: (target_y'=2) & (target_x'=1) + 0.0625: (target_y'=2) & (target_x'=2) + 0.0625: (target_y'=2) & (target_x'=3) + 0.0625: (target_y'=3) & (target_x'=0) + 0.0625: (target_y'=3) & (target_x'=1) + 0.0625: (target_y'=3) & (target_x'=2) + 0.0625: (target_y'=3) & (target_x'=3) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[PICK_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & (y1 != target_y | x1 != target_x) -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[PICK_UP] turn=1 & NOT_COLLISION & PLAYER1_KO -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[PICK_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = target_y & x2 = target_x -> 0.0625: (target_y'=0) & (target_x'=0) + 0.0625: (target_y'=0) & (target_x'=1) + 0.0625: (target_y'=0) & (target_x'=2) + 0.0625: (target_y'=0) & (target_x'=3) + 0.0625: (target_y'=1) & (target_x'=0) + 0.0625: (target_y'=1) & (target_x'=1) + 0.0625: (target_y'=1) & (target_x'=2) + 0.0625: (target_y'=1) & (target_x'=3) + 0.0625: (target_y'=2) & (target_x'=0) + 0.0625: (target_y'=2) & (target_x'=1) + 0.0625: (target_y'=2) & (target_x'=2) + 0.0625: (target_y'=2) & (target_x'=3) + 0.0625: (target_y'=3) & (target_x'=0) + 0.0625: (target_y'=3) & (target_x'=1) + 0.0625: (target_y'=3) & (target_x'=2) + 0.0625: (target_y'=3) & (target_x'=3) & (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[PICK_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & (y2 != target_y | x2 != target_x) -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[PICK_UP] turn=2 & NOT_COLLISION & PLAYER2_KO -> (turn'=turn=0 ? 1 : turn=1 ? 2 : turn=2 ? 0 : 0);
[PICK_UP] (IS_COLLISION | ALL_PLAYERS_KO) & NOT_DONE -> (done'=true);
[PICK_UP] (IS_COLLISION | ALL_PLAYERS_KO) & IS_DONE -> true;
endmodule
rewards
[UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO: 1;
[RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO: 1;
[DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO: 1;
[LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO: 1;
[HIT_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO: 1;
[HIT_RIGHT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO: 1;
[HIT_DOWN] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO: 1;
[HIT_LEFT] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO: 1;
[PICK_UP] turn=0 & NOT_COLLISION & NOT_PLAYER0_KO & y0 = target_y & x0 = target_x : 100;
[UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO: 1;
[RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO: 1;
[DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO: 1;
[LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO: 1;
[HIT_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO: 1;
[HIT_RIGHT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO: 1;
[HIT_DOWN] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO: 1;
[HIT_LEFT] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO: 1;
[PICK_UP] turn=1 & NOT_COLLISION & NOT_PLAYER1_KO & y1 = target_y & x1 = target_x : 100;
[UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO: 1;
[RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO: 1;
[DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO: 1;
[LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO: 1;
[HIT_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO: 1;
[HIT_RIGHT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO: 1;
[HIT_DOWN] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO: 1;
[HIT_LEFT] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO: 1;
[PICK_UP] turn=2 & NOT_COLLISION & NOT_PLAYER2_KO & y2 = target_y & x2 = target_x : 100;
endrewards
label "player0_ko" = PLAYER0_KO;
label "player1_ko" = PLAYER1_KO;
label "player2_ko" = PLAYER2_KO;
