mdp
//0 Row
formula CELL00_BLOCKED = (cell00 != 0);
formula CELL00_NOT_BLOCKED = (CELL00_BLOCKED=false);

formula CELL01_BLOCKED = (cell01 != 0);
formula CELL01_NOT_BLOCKED = (CELL01_BLOCKED=false);

formula CELL02_BLOCKED = (cell02 != 0);
formula CELL02_NOT_BLOCKED = (CELL02_BLOCKED=false);
//1 Row
formula CELL10_BLOCKED = (cell10 != 0);
formula CELL10_NOT_BLOCKED = (CELL10_BLOCKED=false);

formula CELL11_BLOCKED = (cell11 != 0);
formula CELL11_NOT_BLOCKED = (CELL11_BLOCKED=false);

formula CELL12_BLOCKED = (cell12 != 0);
formula CELL12_NOT_BLOCKED = (CELL12_BLOCKED=false);
//2 Row
formula CELL20_BLOCKED = (cell20 != 0);
formula CELL20_NOT_BLOCKED = (CELL20_BLOCKED=false);

formula CELL21_BLOCKED = (cell21 != 0);
formula CELL21_NOT_BLOCKED = (CELL21_BLOCKED=false);

formula CELL22_BLOCKED = (cell22 != 0);
formula CELL22_NOT_BLOCKED = (CELL22_BLOCKED=false);

formula ALL_BLOCKED = (CELL00_BLOCKED & CELL01_BLOCKED & CELL02_BLOCKED & CELL10_BLOCKED & CELL11_BLOCKED & CELL12_BLOCKED & CELL20_BLOCKED & CELL21_BLOCKED & CELL22_BLOCKED);
formula NOT_ALL_BLOCKED = (ALL_BLOCKED=false);

formula GAME_OVER = ALL_BLOCKED;
formula NOT_GAME_OVER = (GAME_OVER = false);

formula IS_DONE = (done=true);
formula NOT_DONE = (IS_DONE=false);

module tictactoe
	cell00 : [0..2] init 0;
	cell01 : [0..2] init 0;
	cell02 : [0..2] init 0;
	cell10 : [0..2] init 0;
	cell11 : [0..2] init 0;
	cell12 : [0..2] init 0;
	cell20 : [0..2] init 0;
	cell21 : [0..2] init 0;
	cell22 : [0..2] init 0;
	turn: [0..1] init 0;
	done : bool init false;
	//0 Row
	//Player 0
	[cell00] CELL00_NOT_BLOCKED & NOT_GAME_OVER & turn=0 & NOT_DONE-> (turn'=1) & (cell00'=turn+1);
	[cell00] CELL00_NOT_BLOCKED & GAME_OVER & turn=0  & NOT_DONE-> (done'=true);
	//Player 1
	[cell00] CELL00_NOT_BLOCKED & NOT_GAME_OVER & turn=1 & NOT_DONE-> (turn'=0) & (cell00'=turn+1);
	[cell00] CELL00_NOT_BLOCKED & GAME_OVER & turn=1-> (done'=true);
	//Player 0
	[cell01] CELL01_NOT_BLOCKED & NOT_GAME_OVER & turn=0  & NOT_DONE-> (turn'=1) & (cell01'=turn+1);
	[cell01] CELL01_NOT_BLOCKED & GAME_OVER & turn=0  & NOT_DONE-> (done'=true);
	//Player 1
	[cell01] CELL01_NOT_BLOCKED & NOT_GAME_OVER & turn=1  & NOT_DONE-> (turn'=0) & (cell01'=turn+1);
	[cell01] CELL01_NOT_BLOCKED & GAME_OVER & turn=1  & NOT_DONE-> (done'=true);
	//Player 0
	[cell02] CELL02_NOT_BLOCKED & NOT_GAME_OVER & turn=0  & NOT_DONE-> (turn'=1) & (cell02'=turn+1);
	[cell02] CELL02_NOT_BLOCKED & GAME_OVER & turn=0  & NOT_DONE-> (done'=true);
	//Player 1
	[cell02] CELL02_NOT_BLOCKED & NOT_GAME_OVER & turn=1  & NOT_DONE-> (turn'=0) & (cell02'=turn+1);
	[cell02] CELL02_NOT_BLOCKED & GAME_OVER & turn=1  & NOT_DONE-> (done'=true);

	//1 Row
	//Player 0
	[cell10] CELL10_NOT_BLOCKED & NOT_GAME_OVER & turn=0  & NOT_DONE-> (turn'=1) & (cell10'=turn+1);
	[cell00] CELL10_NOT_BLOCKED & GAME_OVER & turn=0  & NOT_DONE-> (done'=true);
	//Player 1
	[cell10] CELL10_NOT_BLOCKED & NOT_GAME_OVER & turn=1  & NOT_DONE -> (turn'=0) & (cell10'=turn+1);
	[cell10] CELL10_NOT_BLOCKED & GAME_OVER & turn=1  & NOT_DONE-> (done'=true);
	//Player 0
	[cell11] CELL11_NOT_BLOCKED & NOT_GAME_OVER & turn=0  & NOT_DONE -> (turn'=1) & (cell11'=turn+1);
	[cell11] CELL11_NOT_BLOCKED & GAME_OVER & turn=0  & NOT_DONE -> (done'=true);
	//Player 1
	[cell11] CELL11_NOT_BLOCKED & NOT_GAME_OVER & turn=1  & NOT_DONE -> (turn'=0) & (cell11'=turn+1);
	[cell11] CELL11_NOT_BLOCKED & GAME_OVER & turn=1  & NOT_DONE-> (done'=true);
	//Player 0
	[cell12] CELL12_NOT_BLOCKED & NOT_GAME_OVER & turn=0  & NOT_DONE-> (turn'=1) & (cell12'=turn+1);
	[cell12] CELL12_NOT_BLOCKED & GAME_OVER & turn=0  & NOT_DONE -> (done'=true);
	//Player 1
	[cell12] CELL12_NOT_BLOCKED & NOT_GAME_OVER & turn=1  & NOT_DONE-> (turn'=0) & (cell12'=turn+1);
	[cell12] CELL12_NOT_BLOCKED & GAME_OVER & turn=1  & NOT_DONE-> (done'=true);

	//2 Row
	//Player 0
	[cell20] CELL20_NOT_BLOCKED & NOT_GAME_OVER & turn=0  & NOT_DONE -> (turn'=1) & (cell20'=turn+1);
	[cell20] CELL20_NOT_BLOCKED & GAME_OVER & turn=0  & NOT_DONE -> (done'=true);
	//Player 1
	[cell20] CELL20_NOT_BLOCKED & NOT_GAME_OVER & turn=1  & NOT_DONE -> (turn'=0) & (cell20'=turn+1);
	[cell20] CELL20_NOT_BLOCKED & GAME_OVER & turn=1  & NOT_DONE -> (done'=true);
	//Player 0
	[cell21] CELL21_NOT_BLOCKED & NOT_GAME_OVER & turn=0  & NOT_DONE -> (turn'=1) & (cell21'=turn+1);
	[cell21] CELL21_NOT_BLOCKED & GAME_OVER & turn=0  & NOT_DONE -> (done'=true);
	//Player 1
	[cell21] CELL21_NOT_BLOCKED & NOT_GAME_OVER & turn=1  & NOT_DONE -> (turn'=0) & (cell21'=turn+1);
	[cell21] CELL21_NOT_BLOCKED & GAME_OVER & turn=1  & NOT_DONE -> (done'=true);
	//Player 0
	[cell22] CELL22_NOT_BLOCKED & NOT_GAME_OVER & turn=0  & NOT_DONE -> (turn'=1) & (cell22'=turn+1);
	[cell22] CELL22_NOT_BLOCKED & GAME_OVER & turn=0  & NOT_DONE -> (done'=true);
	//Player 1
	[cell22] CELL22_NOT_BLOCKED & NOT_GAME_OVER & turn=1  & NOT_DONE -> (turn'=0) & (cell22'=turn+1);
	[cell22] CELL22_NOT_BLOCKED & GAME_OVER & turn=1  & NOT_DONE-> (done'=true);


	
	
endmodule