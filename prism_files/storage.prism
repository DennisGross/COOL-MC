mdp

const int max_size=2;
const int max_bureaucracy=3;

//done?
formula IS_DONE = done;
formula IS_NOT_DONE = (IS_DONE = false);

//STORAGE
formula STORAGE_FULL = (stack=max_size);
formula STORAGE_NOT_FULL = (STORAGE_FULL =false);
formula STORAGE_EMPTY = (stack = 0);
formula STORAGE_NOT_EMPTY = (STORAGE_EMPTY=false);


//bureaucracy
formula BUREAUCRACY = (bureaucracy > 2);
formula NO_BUREAUCRACY = (bureaucracy = 0);
formula TOO_MUCH_BUREAUCRACY = (bureaucracy = max_bureaucracy);
formula NOT_TOO_MUCH_BUREAUCRACY = (TOO_MUCH_BUREAUCRACY = false);

module storage
	stack : [0..max_size] init 0;
	done: bool init false;
	// bureaucracy

	//WAIT
	[WAIT] IS_NOT_DONE & STORAGE_NOT_FULL -> (0.4) : (stack'= stack) + (0.6) : (stack'= stack+1);
	[WAIT] IS_NOT_DONE & STORAGE_FULL -> (1) : (done'=true);

	//OFFICE_WORK
	[OFFICE_WORK] IS_NOT_DONE & STORAGE_NOT_FULL -> (0.5) : (stack'= stack) + (0.5) : (stack'= stack+1);
	[OFFICE_WORK] IS_NOT_DONE & STORAGE_FULL -> (1) : (done'=true);

	//STORAGE WORK
	[STORAGE_WORK] IS_NOT_DONE & STORAGE_NOT_EMPTY & STORAGE_NOT_FULL-> (0.9) : (stack'= stack-1) + (0.1) : (stack'= stack);
	[STORAGE_WORK] IS_NOT_DONE & STORAGE_EMPTY -> true;
	[STORAGE_WORK] IS_NOT_DONE & STORAGE_FULL -> (1) : (done'=true);
	
	
	//DONE
	[WAIT] IS_DONE -> (1) : (done'=true);
	[STORAGE_WORK] IS_DONE -> (1) : (done'=true);
	[OFFICE_WORK] IS_DONE -> (1) : (done'=true);
	
endmodule

module office
	bureaucracy : [0..max_bureaucracy] init 0;
	//WAIT
	[WAIT] IS_NOT_DONE & NOT_TOO_MUCH_BUREAUCRACY & STORAGE_NOT_FULL-> (0.3) : (bureaucracy'=bureaucracy+1) + (0.7) : true;
	[WAIT] IS_NOT_DONE & TOO_MUCH_BUREAUCRACY -> (1) : true;

	//OFFICE_WORK
	[OFFICE_WORK] IS_NOT_DONE & BUREAUCRACY & STORAGE_NOT_FULL-> (0.7) : (bureaucracy'=bureaucracy-1) + (0.3) : (bureaucracy'= bureaucracy);
	[OFFICE_WORK] IS_NOT_DONE & NO_BUREAUCRACY & STORAGE_NOT_FULL-> (1) : (bureaucracy'=bureaucracy);

	//STORAGE WORK
	[STORAGE_WORK] IS_NOT_DONE & STORAGE_NOT_FULL -> (0.5) : (bureaucracy'= bureaucracy) + (0.5) : (bureaucracy'= bureaucracy+1);

	//Storage FULL?
	[WAIT] IS_NOT_DONE & STORAGE_FULL -> (1) : true;
	[STORAGE_WORK] IS_NOT_DONE & STORAGE_FULL -> (1) : true;
	[OFFICE_WORK] IS_NOT_DONE & STORAGE_FULL -> (1) : true;
	//DONE
	[WAIT] IS_DONE -> (1) : true;
	[STORAGE_WORK] IS_DONE -> (1) : true;
	[OFFICE_WORK] IS_DONE -> (1) : true;
	

endmodule




rewards
	// Lazyness
	[WAIT] STORAGE_NOT_EMPTY | BUREAUCRACY : 2*(bureaucracy + stack);
	[STORAGE_WORK] STORAGE_EMPTY : 2*(bureaucracy + stack);
	[OFFICE_WORK] NO_BUREAUCRACY : 2*(bureaucracy + stack);


	// Normal Work
	[STORAGE_WORK] STORAGE_NOT_EMPTY : bureaucracy + stack;
	[OFFICE_WORK] BUREAUCRACY : bureaucracy + stack;

	//It is fine
	[WAIT] STORAGE_EMPTY : bureaucracy + stack;
	

	
	//Storage is full
	[WAIT] STORAGE_FULL : 10000;
	[STORAGE_WORK] STORAGE_FULL : 10000;
	[OFFICE_WORK] STORAGE_FULL : 10000;
	
endrewards
